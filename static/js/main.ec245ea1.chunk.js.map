{"version":3,"sources":["components/Publish.jsx","components/Navber.jsx","App.js","index.js"],"names":["Publish","useState","inputdata","setInputData","lists","localStorage","getItem","JSON","parse","getLocalData","items","setItems","isEditItem","setIsEditItem","toggleButton","setToggleButton","addItem","map","curElem","id","name","myNewInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","onClick","index","item_todo_edited","find","editItem","updatedItems","filter","deleteItem","type","placeholder","value","onChange","event","target","Navber","color","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAuIeA,EAzHC,WACd,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAZP,WACnB,IAAMG,EAAQC,aAAaC,QAAQ,cAEnC,OAAIF,EACKG,KAAKC,MAAMJ,GAEX,GAM0BK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAwCZ,oBAAS,GAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KAGMC,EAAU,WACd,GAAKd,EAEE,GAAIA,GAAaY,EACtBH,EACED,EAAMO,KAAI,SAAAC,GACR,OAAIA,EAAQC,KAAOP,EACV,2BAAKM,GAAZ,IAAqBE,KAAMlB,IAEtBgB,MAIXf,EAAa,IACbU,EAAc,MACdE,GAAgB,OACX,CACL,IAAMM,EAAiB,CACrBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMlB,GAERS,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBlB,EAAa,SApBbsB,MAAM,sBAoDV,OAJAC,qBAAU,WACRrB,aAAasB,QAAQ,aAAcpB,KAAKqB,UAAUlB,MACjD,CAACA,IAGF,mCACE,qBAAKmB,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACE,mCACE,sCACA,wEAGF,qBAAKA,UAAU,YAAf,SACGnB,EAAMO,KAAI,SAAAC,GACT,OACE,sBAAKW,UAAU,WAAf,UACE,6BAAKX,EAAQE,OACb,sBAAKS,UAAU,WAAf,UACE,mBACEA,UAAU,sBACVC,QAAS,kBA5CZ,SAAAC,GACf,IAAMC,EAAmBtB,EAAMuB,MAAK,SAAAf,GAClC,OAAOA,EAAQC,KAAOY,KAExB5B,EAAa6B,EAAiBZ,MAC9BP,EAAckB,GACdhB,GAAgB,GAsCiBmB,CAAShB,EAAQC,OAElC,mBACEU,UAAU,2BACVC,QAAS,kBAtCV,SAAAC,GACjB,IAAMI,EAAezB,EAAM0B,QAAO,SAAAlB,GAChC,OAAOA,EAAQC,KAAOY,KAExBpB,EAASwB,GAkCwBE,CAAWnB,EAAQC,YATTD,EAAQC,SAgB7C,sBAAKU,UAAU,WAAf,UACE,uBACES,KAAK,OACLC,YAAY,YACZV,UAAU,eACVW,MAAOtC,EACPuC,SAAU,SAAAC,GAAK,OAAIvC,EAAauC,EAAMC,OAAOH,UAE9C1B,EAEC,mBAAGe,UAAU,2BAA2BC,QAASd,IAEjD,mBAAGa,UAAU,sBAAsBC,QAASd,OAKhD,qBAAKa,UAAU,YAAf,SACE,wBACEA,UAAU,eACV,oBAAkB,aAClBC,QA1DM,WAChBnB,EAAS,KAsDD,SAKE,2DCzFCiC,EAhCA,WACb,OACE,qCACE,sBAAKf,UAAU,WAAf,UACE,qBAAKA,UAAU,YAAf,SACE,+BACE,6BACE,0CAEF,6BACE,6CAIN,qBAAKA,UAAU,SAAf,SACE,qBAAIA,UAAU,iBAAd,UACE,6BACE,cAAC,IAAD,CAAYgB,MAAM,WAEpB,6BACE,cAAC,IAAD,CAASA,MAAM,mBAKvB,yBAAShB,UAAU,eAAnB,SACE,cAAC,EAAD,UCpBOiB,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCANC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ec245ea1.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Publish.css\";\r\nimport { VscAdd } from \"react-icons/vsc\";\r\n\r\nconst getLocalData = () => {\r\n  const lists = localStorage.getItem(\"mytodolist\");\r\n\r\n  if (lists) {\r\n    return JSON.parse(lists);\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nconst Publish = () => {\r\n  const [inputdata, setInputData] = useState(\"\");\r\n  const [items, setItems] = useState(getLocalData());\r\n  const [isEditItem, setIsEditItem] = useState(\"\");\r\n  const [toggleButton, setToggleButton] = useState(false);\r\n\r\n  // add the items fucnction\r\n  const addItem = () => {\r\n    if (!inputdata) {\r\n      alert(\"plz fill the data\");\r\n    } else if (inputdata && toggleButton) {\r\n      setItems(\r\n        items.map(curElem => {\r\n          if (curElem.id === isEditItem) {\r\n            return { ...curElem, name: inputdata };\r\n          }\r\n          return curElem;\r\n        })\r\n      );\r\n\r\n      setInputData(\"\");\r\n      setIsEditItem(null);\r\n      setToggleButton(false);\r\n    } else {\r\n      const myNewInputData = {\r\n        id: new Date().getTime().toString(),\r\n        name: inputdata\r\n      };\r\n      setItems([...items, myNewInputData]);\r\n      setInputData(\"\");\r\n    }\r\n  };\r\n\r\n  //edit the items\r\n  const editItem = index => {\r\n    const item_todo_edited = items.find(curElem => {\r\n      return curElem.id === index;\r\n    });\r\n    setInputData(item_todo_edited.name);\r\n    setIsEditItem(index);\r\n    setToggleButton(true);\r\n  };\r\n\r\n  // how to delete items section\r\n  const deleteItem = index => {\r\n    const updatedItems = items.filter(curElem => {\r\n      return curElem.id !== index;\r\n    });\r\n    setItems(updatedItems);\r\n  };\r\n\r\n  // remove all the elements\r\n  const removeAll = () => {\r\n    setItems([]);\r\n  };\r\n\r\n  // adding localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"mytodolist\", JSON.stringify(items));\r\n  }, [items]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main-div\">\r\n        <div className=\"child-div\">\r\n          <figure>\r\n            <h2>TAGS</h2>\r\n            <figcaption>select time for your event </figcaption>\r\n          </figure>\r\n          {/* show our items  */}\r\n          <div className=\"showItems\">\r\n            {items.map(curElem => {\r\n              return (\r\n                <div className=\"eachItem\" key={curElem.id}>\r\n                  <h3>{curElem.name}</h3>\r\n                  <div className=\"todo-btn\">\r\n                    <i\r\n                      className=\"far fa-edit add-btn\"\r\n                      onClick={() => editItem(curElem.id)}\r\n                    ></i>\r\n                    <i\r\n                      className=\"far fa-trash-alt add-btn\"\r\n                      onClick={() => deleteItem(curElem.id)}\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"addItems\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\" Add Item\"\r\n              className=\"form-control\"\r\n              value={inputdata}\r\n              onChange={event => setInputData(event.target.value)}\r\n            />\r\n            {toggleButton ? (\r\n              /* <VscAdd className=\"add-btn\" onClick={addItem} /> */\r\n              <i className=\"far fa-trash-alt add-btn\" onClick={addItem}></i>\r\n            ) : (\r\n              <i className=\"far fa-edit add-btn\" onClick={addItem}></i>\r\n            )}\r\n          </div>\r\n\r\n          {/* rmeove all button  */}\r\n          <div className=\"showItems\">\r\n            <button\r\n              className=\"btn effect04\"\r\n              data-sm-link-text=\"Remove All\"\r\n              onClick={removeAll}\r\n            >\r\n              <span> CHECK LIST</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Publish;\r\n","import React from \"react\";\r\nimport \"./Navbar.css\";\r\nimport { MdSettings, MdClear } from \"react-icons/md\";\r\nimport Publish from \"./Publish\"\r\n\r\nconst Navber = () => {\r\n  return (\r\n    <>\r\n      <nav className=\"main-nav\">\r\n        <div className=\"menu-link\">\r\n          <ul>\r\n            <li>\r\n              <p>Publish</p>\r\n            </li>\r\n            <li>\r\n              <p>saved</p>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"social\">\r\n          <ul className=\"social-desktop\">\r\n            <li>\r\n              <MdSettings color=\"blue\" />\r\n            </li>\r\n            <li>\r\n              <MdClear color=\"blue\"/>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n      <section className=\"hero-section\">\r\n        <Publish />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navber;\r\n","import \"./App.css\";\nimport Navber from \"./components/Navber\";\n\nfunction App() {\n  return (\n    <>\n      <Navber />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}